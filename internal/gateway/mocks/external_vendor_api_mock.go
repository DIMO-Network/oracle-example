// Code generated by MockGen. DO NOT EDIT.
// Source: external_vendor_api.go
//
// Generated by this command:
//
//	mockgen -source external_vendor_api.go -destination mocks/external_vendor_api_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gateway "github.com/DIMO-Network/oracle-example/internal/gateway"
	gomock "go.uber.org/mock/gomock"
)

// MockExternalVendorAPI is a mock of ExternalVendorAPI interface.
type MockExternalVendorAPI struct {
	ctrl     *gomock.Controller
	recorder *MockExternalVendorAPIMockRecorder
}

// MockExternalVendorAPIMockRecorder is the mock recorder for MockExternalVendorAPI.
type MockExternalVendorAPIMockRecorder struct {
	mock *MockExternalVendorAPI
}

// NewMockExternalVendorAPI creates a new mock instance.
func NewMockExternalVendorAPI(ctrl *gomock.Controller) *MockExternalVendorAPI {
	mock := &MockExternalVendorAPI{ctrl: ctrl}
	mock.recorder = &MockExternalVendorAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalVendorAPI) EXPECT() *MockExternalVendorAPIMockRecorder {
	return m.recorder
}

// EnrollVehicles mocks base method.
func (m *MockExternalVendorAPI) EnrollVehicles(vins []string) (gateway.EnrolledItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnrollVehicles", vins)
	ret0, _ := ret[0].(gateway.EnrolledItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnrollVehicles indicates an expected call of EnrollVehicles.
func (mr *MockExternalVendorAPIMockRecorder) EnrollVehicles(vins any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnrollVehicles", reflect.TypeOf((*MockExternalVendorAPI)(nil).EnrollVehicles), vins)
}

// GetLatestTelemetry mocks base method.
func (m *MockExternalVendorAPI) GetLatestTelemetry(vehicleId string) (*gateway.TelemetryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestTelemetry", vehicleId)
	ret0, _ := ret[0].(*gateway.TelemetryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestTelemetry indicates an expected call of GetLatestTelemetry.
func (mr *MockExternalVendorAPIMockRecorder) GetLatestTelemetry(vehicleId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestTelemetry", reflect.TypeOf((*MockExternalVendorAPI)(nil).GetLatestTelemetry), vehicleId)
}

// ValidateVehicles mocks base method.
func (m *MockExternalVendorAPI) ValidateVehicles(vins []string) (gateway.CapabilityItems, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateVehicles", vins)
	ret0, _ := ret[0].(gateway.CapabilityItems)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateVehicles indicates an expected call of ValidateVehicles.
func (mr *MockExternalVendorAPIMockRecorder) ValidateVehicles(vins any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateVehicles", reflect.TypeOf((*MockExternalVendorAPI)(nil).ValidateVehicles), vins)
}
